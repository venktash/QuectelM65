##==========================================================================
 #                   Quectel OpenCPU
 #
 #              Copyright(c) 2012-2013 Quectel Ltd. All rights reserved.
 #
 #--------------------------------------------------------------------------
 # File Description
 # ----------------
 #      OpenCPU makefile definition.
 #
 #--------------------------------------------------------------------------
 #
 #  Created by   :     Stanley YONG
 #        Date   :     December 18, 2012
 #==========================================================================

#-------------------------------------------------------------------------------
# Configure environment path
#-------------------------------------------------------------------------------
BUILDDIR=build
BIN_DIR=$(BUILDDIR)/gcc
OBJ_DIR=$(BIN_DIR)/obj
BUILDLOG=$(BIN_DIR)/build.log
LIB_INC='$(strip $(GCC_INSTALL_PATH))/lib/gcc/mips-elf/$(GCC_VERSION)/include'
ENV_INC='$(strip $(GCC_INSTALL_PATH))/mips-elf/sys-include'
ENV_LIB_GCC='$(strip $(GCC_INSTALL_PATH))/lib/gcc/mips-elf/$(GCC_VERSION)'
LODGEN='tools/gen_lod'

#-------------------------------------------------------------------------------
# Configure compiling utilities
#-------------------------------------------------------------------------------
CC=mips-elf-gcc
AS=mips-elf-as
LD=mips-elf-ld
OBJCOPY=mips-elf-objcopy
MAKE=make
RM=rm
RMDIR=rmdir

BINNAME=$(BIN_DIR)/$(TARGET).bin
ELFNAME=$(BIN_DIR)/$(TARGET).elf
MAPNAME=$(BIN_DIR)/$(TARGET).map
LODNAME=$(BIN_DIR)/$(TARGET).lod
LOGNAME=$(BIN_DIR)/build.log

#-------------------------------------------------------------------------------
# Configure standard reference library
#-------------------------------------------------------------------------------
STDLIB=$(ENV_LIB_GCC)/libgcc.a

#-------------------------------------------------------------------------------
# Configure compiling options
#-------------------------------------------------------------------------------
SFLAGS=-march=xcpu -mtune=xcpu -EL
CFLAGS=-std=gnu99 -mips16  -Wshadow -Os -g  -msoft-float -Wundef -Wunused-function -Wuninitialized -minterlink-mips16 -nostdlib -nostdinc -nodefaultlibs -c  \
-march=xcpu -mtune=xcpu -Wa,-march=xcpu,-mtune=xcpu \
-fno-inline-small-functions -fno-inline-functions -fno-align-functions -fno-align-jumps -fno-align-loops -fno-align-labels \
-pipe -fwide-exec-charset=UTF-16LE -fshort-wchar \
-fno-strict-aliasing -ffunction-sections -fdata-sections -fno-builtin-iswspace \
-ffixed-t3 -ffixed-t4 -ffixed-t5 -ffixed-t6 -ffixed-t7 -ffixed-s2 -ffixed-s3 -ffixed-s4 -ffixed-s5 -ffixed-s6 -ffixed-s7 -ffixed-fp -G0 -Wall \
-mexplicit-relocs -fweb -frename-registers -mmemcpy -mmips-tfile -nostartfiles \
-EL


C_DEF=-D __OCPU_COMPILER_GCC__
LDFLAGS= --oformat=elf32-littlemips -Rbuild -T libs/gcc/linkscript.ld -nodefaultlibs --warn-common --error-unresolved-symbols


#-------------------------------------------------------------------------------
# Definition for compiling procedure
#-------------------------------------------------------------------------------
new: CreateDir lodgen #$(BIN_DIR)/$(TARGET).bin

$(BIN_DIR)/$(TARGET).bin: $(BIN_DIR)/$(TARGET).elf
	@$(OBJCOPY) $(OBJCOPYFLAGS) -O binary $< $@
	@echo ----------------------------------------------------
	@echo - GCC Compiling Finished Sucessfully.
	@echo - The target image is in the '$(BIN_DIR)' directory.
	@echo ----------------------------------------------------

$(BIN_DIR)/$(TARGET).elf: $(OBJS)
	@$(LD) $(LDFLAGS) -Map $(BIN_DIR)/$(TARGET).map -o $@ $(OBJS) $(USERLIB) $(STDLIB) \


$(OBJ_DIR)/%.o: %.S
	@echo - Building  $@ 
	@$(AS) $(C_DEF) $(SFLAGS) -o $@ $<
	
	

$(OBJ_DIR)/%.o: %.c
#	$(warning <-- Start to CC, C_PREDEF=$(C_PREDEF) -->)
	@echo - Building  $@ 
	@$(CC) $(C_DEF) $(C_PREDEF) $(CFLAGS) $(INCS) -o $@ $<

CreateDir:
    ifeq ($(BIN_DIR), $(wildcard $(BIN_DIR)))
    else
	mkdir -p $(BIN_DIR)
    endif
	
    ifeq ($(OBJ_DIR), $(wildcard $(OBJ_DIR)))
    else
	mkdir -p $(OBJ_DIR)
    endif
	
	@for val in $(SRC_DIRS); do \
	mkdir -p $(OBJ_DIR)/$${val};\
	done;

lodgen: $(BIN_DIR)/$(TARGET).bin
	@$(LODGEN) $(BIN_DIR)/$(TARGET).bin 137428992 4096 $(BIN_DIR)/$(TARGET).lod
clean:
	@$(RM) -rfv $(OBJ_DIR)
    ifeq ($(BINNAME), $(wildcard $(BINNAME)))
		@$(RM) $(BINNAME)
    endif
    ifeq ($(ELFNAME), $(wildcard $(ELFNAME)))
		@$(RM) $(ELFNAME)
    endif
    ifeq ($(MAPNAME), $(wildcard $(MAPNAME)))
		@$(RM) $(MAPNAME)
    endif
    ifeq ($(LODNAME), $(wildcard $(LODNAME)))
		@$(RM) $(LODNAME)
    endif
    ifeq ($(LOGNAME), $(wildcard $(LOGNAME)))
		@$(RM) $(LOGNAME)
    endif
	@echo -------------------
	@echo clean finished.
	@echo -------------------

help:
	@echo Type in \"make clean\" to clean the files generated by the last compilation.
	@echo Type in \"make new\" to start compilation.
	@echo Type in \"make help\" to compilation guide.
.PHONY: all clean CreateDir
